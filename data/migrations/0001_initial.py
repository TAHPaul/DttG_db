# Generated by Django 4.0.6 on 2022-08-02 11:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(help_text='Please format: LASTNAME, firstname', max_length=50, unique=True)),
                ('other_names', models.TextField(blank=True, help_text='Please format: LASTNAME, firstname | LASTNAME, firstname | etc.')),
                ('year_of_birth', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2022)])),
                ('year_of_death', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2022)])),
                ('centres_of_activity', models.TextField(blank=True, help_text='Please format: City1 | City2 | City3 | etc. ')),
                ('rkd_link', models.URLField(blank=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('country', models.CharField(blank=True, max_length=40)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Colour',
            fields=[
                ('id', models.CharField(choices=[('LW', 'Light white'), ('W', 'White'), ('DW', 'Dark white'), ('LBl', 'Light black'), ('Bl', 'Black'), ('DBl', 'Dark black'), ('LR', 'Light red'), ('R', 'Red'), ('DR', 'Dark red'), ('LY', 'Light yellow'), ('Y', 'Yellow'), ('DY', 'Dark yellow'), ('LBr', 'Light brown'), ('Br', 'Brown'), ('DBr', 'Dark brown'), ('LP', 'Light pink'), ('P', 'Pink'), ('DP', 'Dark pink'), ('LO', 'Light orange'), ('O', 'Orange'), ('DO', 'Dark orange'), ('LG', 'Light grey'), ('G', 'Grey'), ('DG', 'Dark grey')], max_length=3, primary_key=True, serialize=False)),
                ('colour_name', models.CharField(max_length=20)),
                ('hex_code', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Museum',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('museum_name', models.CharField(max_length=40, unique=True)),
                ('website', models.URLField(blank=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.city')),
            ],
        ),
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('id', models.CharField(help_text='Please use the following formatting: M_###', max_length=6, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('artist_validity', models.CharField(blank=True, choices=[('copy after', 'Copy after'), ('in the style of', 'In the style of'), ('uncertain', 'Uncertain'), ('attributed to', 'Attributed to'), ('NULL', 'NULL')], max_length=30)),
                ('date_validity', models.CharField(blank=True, choices=[('c.', 'Circa'), ('decade', 'Decade'), ('in or shortly after', 'In or shortly after'), ('after', 'After'), ('before', 'Before')], max_length=30)),
                ('date1', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2022)])),
                ('date2', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2022)])),
                ('signature', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO'), ('unclear', 'UNCLEAR')], max_length=10)),
                ('support', models.CharField(blank=True, choices=[('canvas', 'Canvas'), ('panel', 'Panel'), ('panel transferred to canvas', 'Panel transferred to canvas'), ('copper', 'Copper'), ('canvas on panel', 'Canvas on panel')], max_length=40)),
                ('medium', models.CharField(blank=True, max_length=50)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('accession_number', models.CharField(blank=True, max_length=40)),
                ('museum_link', models.URLField(unique=True)),
                ('rkd_link', models.URLField(unique=True)),
                ('image', models.ImageField(default='default_artwork.jpg', upload_to='artwork_images')),
                ('artist1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to='data.artist')),
                ('artist2', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_artist', to='data.artist')),
                ('museum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.museum')),
                ('place_of_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.city')),
            ],
        ),
        migrations.AddField(
            model_name='artist',
            name='place_of_birth',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='birth_place', to='data.city'),
        ),
        migrations.AddField(
            model_name='artist',
            name='place_of_death',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='death_place', to='data.city'),
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('m_number', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='data.artwork')),
                ('no_of_grounds', models.CharField(blank=True, choices=[('1', 'One'), ('2', 'Two'), ('3', 'Three')], max_length=1)),
                ('description', models.TextField(blank=True)),
                ('colour_code', models.CharField(max_length=10)),
                ('layer1_composition', models.TextField()),
                ('layer2_composition', models.TextField()),
                ('layer3_composition', models.TextField()),
                ('reliability', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('sample', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO'), ('unclear', 'UNCLEAR')], max_length=10)),
                ('microscopy', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO'), ('unclear', 'UNCLEAR')], max_length=10)),
                ('elem_analysis', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO'), ('unclear', 'UNCLEAR')], max_length=10)),
                ('sample_location', models.TextField()),
                ('sample_name_1', models.CharField(max_length=50, unique=True)),
                ('sample_link_1', models.URLField(unique=True)),
                ('sample_name_2', models.CharField(max_length=50, unique=True)),
                ('sample_link_2', models.URLField(unique=True)),
                ('researchers', models.TextField()),
                ('source', models.TextField()),
                ('dttg_new_research', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO'), ('unclear', 'UNCLEAR')], max_length=10)),
                ('notes', models.TextField()),
                ('layer1_colour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colour_1', to='data.colour')),
                ('layer2_colour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colour_2', to='data.colour')),
                ('layer3_colour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colour_3', to='data.colour')),
                ('toplayer_colour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colour_toplayer', to='data.colour')),
            ],
            options={
                'verbose_name_plural': 'Data',
            },
        ),
    ]
